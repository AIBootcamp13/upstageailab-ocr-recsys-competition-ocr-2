# Canonical compatibility definitions for OCR inference checkpoints.
# Each family describes a compatible combination of encoder, decoder, and head settings.

model_families:
  - id: dbnet_resnet18_unet64
    description: "DBNet architecture trained with ResNet18 backbone and UNet decoder producing 64-channel maps."
    encoder:
      model_names: ["resnet18"]
    decoder:
      class: ocr.models.decoder.UNet
      inner_channels: 256
      output_channels: 64
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnet_resnet18_unet256
    description: "DBNet architecture trained with ResNet18 backbone and UNet decoder widened to 256 output channels."
    encoder:
      model_names: ["resnet18"]
    decoder:
      class: ocr.models.decoder.UNet
      inner_channels: 256
      output_channels: 256
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnet_resnet34_pan
    description: "DBNet architecture trained with ResNet34 backbone and PAN decoder."
    encoder:
      model_names: ["resnet34"]
    decoder:
      class: ocr.models.decoder.pan_decoder.PANDecoder
      inner_channels: 256
      output_channels: 256
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnet_resnet18_pan
    description: "DBNet architecture trained with ResNet18 backbone and PAN decoder."
    encoder:
      model_names: ["resnet18"]
    decoder:
      class: ocr.models.decoder.pan_decoder.PANDecoder
      inner_channels: 256
      output_channels: 256
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnet_mobilenetv3_small_unet256
    description: "DBNet architecture trained with MobileNetV3 Small backbone and widened UNet decoder."
    encoder:
      model_names: ["mobilenetv3_small_050", "mobilenetv3"]
    decoder:
      class: ocr.models.decoder.UNet
      inner_channels: 256
      output_channels: 256
      in_channels: [8, 16, 24, 288]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnet_mobilenetv3_small_resnet_channels
    description: "DBNet architecture with MobileNetV3 naming but ResNet18-like channels (likely due to component overrides)."
    encoder:
      model_names: ["mobilenetv3_small_050", "mobilenetv3"]
    decoder:
      class: ocr.models.decoder.UNet
      inner_channels: 256
      output_channels: 256
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
  - id: dbnetpp_resnet50
    description: "DBNet++ architecture trained with ResNet50/ResNet101 backbone and DBPP decoder."
    encoder:
      model_names: ["resnet50", "resnet101"]
    decoder:
      class: ocr.models.decoder.dbpp_decoder.DBPPDecoder
      inner_channels: 256
      output_channels: 128
      in_channels: [256, 512, 1024, 2048]
    head:
      class: ocr.models.head.db_head.DBHead
      in_channels: 128
  - id: dbnetpp_resnet18
    description: "DBNet++ architecture trained with ResNet18 backbone and DBPP decoder."
    encoder:
      model_names: ["resnet18"]
    decoder:
      class: ocr.models.decoder.dbpp_decoder.DBPPDecoder
      inner_channels: 256
      output_channels: 128
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.db_head.DBHead
      in_channels: 128
  - id: craft_resnet50
    description: "CRAFT architecture trained with ResNet50 backbone for text detection."
    encoder:
      model_names: ["resnet50"]
    decoder:
      class: ocr.models.decoder.UNet
      inner_channels: 256
      output_channels: 256
      in_channels: [64, 128, 256, 512]
    head:
      class: ocr.models.head.DBHead
      in_channels: 256
