[project]
name = "upstage-ocr-receipt-text-detection"
version = "0.1.0"
description = "AI Competition: Receipt Text Detection with DBNet baseline"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "albumentations==1.3.1",
    "autopep8==2.0.4",
    "better-exceptions==0.3.3",
    "black",
    "easydict==1.11",
    "editdistance==0.6.2",
    "flake8==6.1.0",
    "huggingface-hub>=0.20.0",
    "hydra-core==1.3.2",
    "icecream==2.1.3",
    "imageio==2.33.0",
    "isort",
    "lightning>=2.4.0",
    "matplotlib==3.8.2",
    "mypy",
    "numpy>=1.24.0,<2.0.0",
    "numba==0.58.1",
    "nvidia-ml-py>=13.580.82",
    "opencv-python==4.8.1.78",
    "pandas==2.1.4",
    "pandas-stubs",
    "pathlib==1.0.1",
    "Pillow==10.1.0",
    "plotly>=5.17.0",
    "Polygon3==3.0.9.1",
    "pre-commit>=4.3.0",
    "psutil>=5.9.8",
    "pyclipper==1.3.0.post5",
    "PyYAML==6.0.1",
    "pytest>=8.4.2",
    "rich==13.7.0",
    "ruff>=0.13.2",
    "safetensors==0.4.1",
    "scikit-image==0.22.0",
    "scikit-learn==1.3.2",
    "scipy==1.11.4",
    "scipy-stubs",
    "seaborn==0.13.0",
    "shapely==2.0.2",
    "streamlit>=1.28.0",
    "tensorboard==2.15.1",
    "tensorboard-data-server==0.7.2",
    "timm==0.9.12",
    "torchmetrics==1.2.1",
    "tqdm==4.66.1",
    "types-Pillow",
    "types-pyyaml>=6.0.12.20250915",
    "types-shapely",
    "types-tqdm",
    "wandb>=0.17.0",
    # PyTorch with CUDA support - Updated to 2.8.0
    "torch>=2.8.0",
    "torchvision>=0.18.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ocr"]

[tool.uv]
# extra-index-url = ["https://download.pytorch.org/whl/cu121"]

[tool.mypy]
ignore_missing_imports = true
show_error_codes = false  # Don't show informational notes as errors
# Development-friendly settings
warn_unused_ignores = false
warn_redundant_casts = false
warn_unused_configs = false
warn_unreachable = false
# Allow untyped calls and definitions for development
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
# Specific modules without stubs
[[tool.mypy.overrides]]
module = [
    "numba",
    "albumentations",
    "albumentations.pytorch",
    "icecream",
    "timm",
    "pyclipper",
    "Polygon",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ocr.utils.wandb_utils"
ignore_errors = true

[tool.ruff]
line-length = 140
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203", # whitespace before ':'
    "E501", # line too long, handled by black
    "E402", # module level import not at top of file (common in scripts)
    "E722", # bare except (sometimes needed)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "E741", # ambiguous variable name (l is common in image processing)
    "B007", # unused loop variable
    "B904", # raise without from
    "F821", # undefined name (in notebooks)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]
"tests/**" = ["E402", "E741", "F821"]
"ui/**" = ["E402"]
"scripts/**" = ["E402"]
"docker/**" = ["E402"]
"ablation_study/**" = ["E722"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
